diff --git a/osu.Game/Configuration/OsuConfigManager.cs b/osu.Game/Configuration/OsuConfigManager.cs
index 9b0d7f51da..4ccbff5365 100644
--- a/osu.Game/Configuration/OsuConfigManager.cs
+++ b/osu.Game/Configuration/OsuConfigManager.cs
@@ -116,7 +116,7 @@ protected override void InitialiseDefaults()
             SetDefault(OsuSetting.GameplayDisableWinKey, true);
 
             // Update
-            SetDefault(OsuSetting.ReleaseStream, ReleaseStream.Lazer);
+            SetDefault(OsuSetting.ReleaseStream, ReleaseStream.Flathub);
 
             SetDefault(OsuSetting.Version, string.Empty);
 
diff --git a/osu.Game/Configuration/ReleaseStream.cs b/osu.Game/Configuration/ReleaseStream.cs
index ed0bee1dd8..ec3cb37a8f 100644
--- a/osu.Game/Configuration/ReleaseStream.cs
+++ b/osu.Game/Configuration/ReleaseStream.cs
@@ -5,7 +5,7 @@ namespace osu.Game.Configuration
 {
     public enum ReleaseStream
     {
-        Lazer,
+        Flathub,
         //Stable40,
         //Beta40,
         //Stable
diff --git a/osu.Game/OsuGameBase.cs b/osu.Game/OsuGameBase.cs
index f6ec22a536..9f76831875 100644
--- a/osu.Game/OsuGameBase.cs
+++ b/osu.Game/OsuGameBase.cs
@@ -52,7 +52,7 @@ namespace osu.Game
     /// </summary>
     public partial class OsuGameBase : Framework.Game, ICanAcceptFiles
     {
-        public const string CLIENT_STREAM_NAME = @"lazer";
+        public const string CLIENT_STREAM_NAME = @"flathub";
 
         public const int SAMPLE_CONCURRENCY = 6;
 
diff --git a/osu.Game/Updater/SimpleUpdateManager.cs b/osu.Game/Updater/SimpleUpdateManager.cs
index e0409e34df..b59f9d28c9 100644
--- a/osu.Game/Updater/SimpleUpdateManager.cs
+++ b/osu.Game/Updater/SimpleUpdateManager.cs
@@ -49,6 +49,7 @@ protected override async Task<bool> PerformUpdateCheck()
 
                 if (latestTagName != version)
                 {
+		/*
                     Notifications.Post(new SimpleNotification
                     {
                         Text = $"A newer release of osu! has been found ({version} â†’ {latestTagName}).\n\n"
@@ -60,6 +61,7 @@ protected override async Task<bool> PerformUpdateCheck()
                             return true;
                         }
                     });
+		*/
 
                     return true;
                 }
@@ -88,7 +90,7 @@ private string getBestUrl(GitHubRelease release)
                     break;
 
                 case RuntimeInfo.Platform.Linux:
-                    bestAsset = release.Assets?.Find(f => f.Name.EndsWith(".AppImage", StringComparison.Ordinal));
+                    // bestAsset = release.Assets?.Find(f => f.Name.EndsWith(".AppImage", StringComparison.Ordinal));
                     break;
 
                 case RuntimeInfo.Platform.iOS:
diff --git a/osu.Game/Updater/UpdateManager.cs b/osu.Game/Updater/UpdateManager.cs
index 98ce2cb46c..20c18edffd 100644
--- a/osu.Game/Updater/UpdateManager.cs
+++ b/osu.Game/Updater/UpdateManager.cs
@@ -20,7 +20,7 @@ public class UpdateManager : CompositeDrawable
         /// <summary>
         /// Whether this UpdateManager should be or is capable of checking for updates.
         /// </summary>
-        public bool CanCheckForUpdate => game.IsDeployedBuild &&
+        public bool CanCheckForUpdate => false &&
                                          // only implementations will actually check for updates.
                                          GetType() != typeof(UpdateManager);
 
